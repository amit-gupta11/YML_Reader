apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: config
    deployment.kubernetes.io/revision: '7'
    field.cattle.io/publicEndpoints: >-
      [{"addresses":["172.16.33.68"],"port":443,"protocol":"HTTPS","serviceName":"sxirofa-system-stress:sxirofa-svc","ingressName":"sxirofa-system-stress:sxirofa","hostname":"sxi-stress.cms-k8s-dev.fnb.co.za","path":"/","allNodes":true}]
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"configmap.reloader.stakater.com/reload":"config","secret.reloader.stakater.com/reload":"keystores-secrets"},"labels":{"app":"sxirofa","environment":"stress"},"name":"sxirofa-deploy","namespace":"sxirofa-system-stress"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"sxirofa"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"sxirofa","environment":"stress"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r1"]}]},"weight":50},{"preference":{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r3"]}]},"weight":50},{"preference":{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r4"]}]},"weight":50}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r1","r3","r4"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["sxirofa"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"automountServiceAccountToken":false,"containers":[{"env":[{"name":"JAVA_TOOL_OPTIONS","value":"-javaagent:/opt/appdynamics/javaagent.jar
      -Dappdynamics.agent.node.use.as.ephemeral=true"},{"name":"APPDYNAMICS_AGENT_TIER_NAME","value":"sxi-rofa-stress"},{"name":"APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY","valueFrom":{"secretKeyRef":{"key":"access-key","name":"appd-agent-secret"}}}],"envFrom":[{"configMapRef":{"name":"sxi-rofa-stress-appd-configmap"}}],"image":"cms-rpunexus.fnb.co.za/cms/sxirofa:master-178","imagePullPolicy":"Always","name":"sxirofa","ports":[{"containerPort":8080}],"resources":{"limits":{"cpu":"2000m","memory":"2048Mi"},"requests":{"cpu":"2000m","memory":"2048Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":false,"runAsGroup":1000,"runAsNonRoot":true,"runAsUser":1000},"volumeMounts":[{"mountPath":"/home/java/config","name":"config","readOnly":true},{"mountPath":"/home/java/keys","name":"keystores-secrets","readOnly":true},{"mountPath":"/opt/appdynamics","name":"appd-agent-repo"}]}],"imagePullSecrets":[{"name":"harborcreds"}],"initContainers":[{"command":["cp","-r","/opt/appdynamics/.","/opt/temp"],"image":"cms-rpunexus.fnb.co.za/appdynamics/java-agent:24.5.0.36037","name":"appd-agent","volumeMounts":[{"mountPath":"/opt/temp","name":"appd-agent-repo"}]}],"securityContext":{"fsGroup":1000,"runAsGroup":1000,"runAsUser":1000},"topologySpreadConstraints":[{"labelSelector":{"matchLabels":{"app":"sxirofa"}},"maxSkew":1,"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"},{"labelSelector":{"matchLabels":{"app":"sxirofa"}},"maxSkew":1,"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}],"volumes":[{"emptyDir":{},"name":"appd-agent-repo"},{"configMap":{"name":"config"},"name":"config"},{"name":"keystores-secrets","secret":{"secretName":"keystores-secrets"}}]}}}}
    secret.reloader.stakater.com/reload: keystores-secrets
  creationTimestamp: '2024-10-04T11:45:29Z'
  generation: 12
  labels:
    app: sxirofa
    environment: stress
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"sxirofa"}:
                  f:env:
                    k:{"name":"STAKATER_CONFIG_CONFIGMAP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"STAKATER_KEYSTORES_SECRETS_SECRET"}:
                      .: {}
                      f:name: {}
                      f:value: {}
      manager: Reloader
      operation: Update
      time: '2024-10-25T10:56:17Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:configmap.reloader.stakater.com/reload: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:secret.reloader.stakater.com/reload: {}
          f:labels:
            .: {}
            f:app: {}
            f:environment: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:environment: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"sxirofa"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:secretKeyRef: {}
                    k:{"name":"APPDYNAMICS_AGENT_TIER_NAME"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"JAVA_TOOL_OPTIONS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsGroup: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/home/java/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/home/java/keys"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/opt/appdynamics"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:imagePullSecrets:
                .: {}
                k:{"name":"harborcreds"}: {}
              f:initContainers:
                .: {}
                k:{"name":"appd-agent"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/opt/temp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationGracePeriodSeconds: {}
              f:topologySpreadConstraints:
                .: {}
                k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
                k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
              f:volumes:
                .: {}
                k:{"name":"appd-agent-repo"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"keystores-secrets"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: OpenAPI-Generator
      operation: Update
      time: '2024-10-25T10:56:55Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:field.cattle.io/publicEndpoints: {}
      manager: agent
      operation: Update
      time: '2024-11-15T20:54:57Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2024-11-15T20:57:47Z'
  name: sxirofa-deploy
  namespace: sxirofa-system-stress
  resourceVersion: '561757662'
  uid: 718df090-01bf-4b48-9612-d450fe2f351a
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: sxirofa
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: sxirofa
        environment: stress
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r1
              weight: 50
            - preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r3
              weight: 50
            - preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r4
              weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r1
                      - r3
                      - r4
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - sxirofa
                topologyKey: kubernetes.io/hostname
              weight: 100
      automountServiceAccountToken: false
      containers:
        - env:
            - name: JAVA_TOOL_OPTIONS
              value: >-
                -javaagent:/opt/appdynamics/javaagent.jar
                -Dappdynamics.agent.node.use.as.ephemeral=true
            - name: APPDYNAMICS_AGENT_TIER_NAME
              value: sxi-rofa-stress
            - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  key: access-key
                  name: appd-agent-secret
            - name: STAKATER_CONFIG_CONFIGMAP
              value: 2a53013dcb0c2d8cd619a59ee9619fa8f59ffe01
            - name: STAKATER_KEYSTORES_SECRETS_SECRET
              value: ae02a2ba133dd53bf07418930ed111199f8bf8df
          envFrom:
            - configMapRef:
                name: sxi-rofa-stress-appd-configmap
          image: cms-rpunexus.fnb.co.za/cms/sxirofa:master-178
          imagePullPolicy: Always
          name: sxirofa
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            limits:
              cpu: '2'
              memory: 2Gi
            requests:
              cpu: '2'
              memory: 2Gi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 1000
            runAsNonRoot: true
            runAsUser: 1000
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /home/java/config
              name: config
              readOnly: true
            - mountPath: /home/java/keys
              name: keystores-secrets
              readOnly: true
            - mountPath: /opt/appdynamics
              name: appd-agent-repo
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: harborcreds
      initContainers:
        - command:
            - cp
            - '-r'
            - /opt/appdynamics/.
            - /opt/temp
          image: cms-rpunexus.fnb.co.za/appdynamics/java-agent:24.5.0.36037
          imagePullPolicy: IfNotPresent
          name: appd-agent
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /opt/temp
              name: appd-agent-repo
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app: sxirofa
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              app: sxirofa
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - emptyDir: {}
          name: appd-agent-repo
        - configMap:
            defaultMode: 420
            name: config
          name: config
        - name: keystores-secrets
          secret:
            defaultMode: 420
            secretName: keystores-secrets
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2024-10-04T11:45:30Z'
      lastUpdateTime: '2024-10-25T10:56:59Z'
      message: ReplicaSet "sxirofa-deploy-fcf5b7446" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2024-11-15T20:57:47Z'
      lastUpdateTime: '2024-11-15T20:57:47Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
  observedGeneration: 12
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
