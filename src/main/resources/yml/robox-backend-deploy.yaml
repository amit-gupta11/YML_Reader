apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: roboxbackend
    deployment.kubernetes.io/revision: '8'
    field.cattle.io/publicEndpoints: >-
      [{"addresses":["172.16.33.68"],"port":30806,"protocol":"TCP","serviceName":"axlr-system-qa:robox-backend-svc","allNodes":true},{"addresses":["172.16.33.68"],"port":443,"protocol":"HTTPS","serviceName":"axlr-system-qa:robox-backend-svc","ingressName":"axlr-system-qa:roboxbackend","hostname":"roboxlife-backend-qa.cms-k8s-dev.fnb.co.za","path":"/","allNodes":true}]
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"configmap.reloader.stakater.com/reload":"roboxbackend","secret.reloader.stakater.com/reload":"roboxbackend"},"labels":{"app":"roboxbackend","environment":"qa"},"name":"robox-backend-deploy","namespace":"axlr-system-qa"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"roboxbackend"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"roboxbackend","environment":"qa"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r1"]}]},"weight":50},{"preference":{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r3"]}]},"weight":50},{"preference":{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r4"]}]},"weight":50}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r1","r3","r4"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["roboxbackend"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"automountServiceAccountToken":false,"containers":[{"envFrom":[{"configMapRef":{"name":"roboxbackend"}},{"secretRef":{"name":"roboxbackend"}}],"image":"cms-rpunexus.fnb.co.za/axlr/fnb-robolife-api:life-release-nov-24-1","imagePullPolicy":"Always","name":"roboxbackend","ports":[{"containerPort":3000}],"resources":{"limits":{"cpu":"400m","memory":"1536Mi"},"requests":{"cpu":"400m","memory":"1536Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":false,"runAsGroup":101,"runAsNonRoot":true,"runAsUser":101}}],"imagePullSecrets":[{"name":"harborcreds"}],"securityContext":{"fsGroup":101,"runAsGroup":101,"runAsUser":101},"topologySpreadConstraints":[{"labelSelector":{"matchLabels":{"app":"roboxbackend"}},"maxSkew":1,"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"},{"labelSelector":{"matchLabels":{"app":"roboxbackend"}},"maxSkew":1,"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}]}}}}
    secret.reloader.stakater.com/reload: roboxbackend
  creationTimestamp: '2024-03-22T09:19:11Z'
  generation: 51
  labels:
    app: roboxbackend
    environment: qa
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"roboxbackend"}:
                  f:env:
                    .: {}
                    k:{"name":"STAKATER_ROBOXBACKEND_CONFIGMAP"}:
                      .: {}
                      f:name: {}
                      f:value: {}
      manager: Reloader
      operation: Update
      time: '2024-06-26T13:56:33Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:configmap.reloader.stakater.com/reload: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:secret.reloader.stakater.com/reload: {}
          f:labels:
            .: {}
            f:app: {}
            f:environment: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:environment: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"roboxbackend"}:
                  .: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3000,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsGroup: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:imagePullSecrets:
                .: {}
                k:{"name":"harborcreds"}: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationGracePeriodSeconds: {}
              f:topologySpreadConstraints:
                .: {}
                k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
                k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
      manager: OpenAPI-Generator
      operation: Update
      time: '2024-10-22T08:24:22Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:field.cattle.io/publicEndpoints: {}
      manager: agent
      operation: Update
      time: '2024-11-15T20:54:54Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2024-11-15T20:54:54Z'
  name: robox-backend-deploy
  namespace: axlr-system-qa
  resourceVersion: '561742670'
  uid: 1702c1f8-5e4e-445a-ad8b-b1e3ce27e86b
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: roboxbackend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: roboxbackend
        environment: qa
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r1
              weight: 50
            - preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r3
              weight: 50
            - preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r4
              weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r1
                      - r3
                      - r4
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - roboxbackend
                topologyKey: kubernetes.io/hostname
              weight: 100
      automountServiceAccountToken: false
      containers:
        - env:
            - name: STAKATER_ROBOXBACKEND_CONFIGMAP
              value: 2f360b7b0206f255101d40d63207cb81cc7c1bee
          envFrom:
            - configMapRef:
                name: roboxbackend
            - secretRef:
                name: roboxbackend
          image: cms-rpunexus.fnb.co.za/axlr/fnb-robolife-api:life-release-nov-24-1
          imagePullPolicy: Always
          name: roboxbackend
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            limits:
              cpu: 400m
              memory: 1536Mi
            requests:
              cpu: 400m
              memory: 1536Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 101
            runAsNonRoot: true
            runAsUser: 101
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: harborcreds
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsUser: 101
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app: roboxbackend
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              app: roboxbackend
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2024-03-22T09:19:12Z'
      lastUpdateTime: '2024-10-22T08:24:25Z'
      message: >-
        ReplicaSet "robox-backend-deploy-659567fc56" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2024-11-15T20:54:05Z'
      lastUpdateTime: '2024-11-15T20:54:05Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
  observedGeneration: 51
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
