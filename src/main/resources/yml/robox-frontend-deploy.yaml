apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: roboxfrontend
    deployment.kubernetes.io/revision: '9'
    field.cattle.io/publicEndpoints: >-
      [{"addresses":["172.16.33.68"],"port":30002,"protocol":"TCP","serviceName":"axlr-system-qa:robox-frontend-svc","allNodes":true},{"addresses":["172.16.33.68"],"port":443,"protocol":"HTTPS","serviceName":"axlr-system-qa:robox-frontend-svc","ingressName":"axlr-system-qa:roboxfrontend","hostname":"roboxlife-frontend-qa.cms-k8s-dev.fnb.co.za","path":"/","allNodes":true}]
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"configmap.reloader.stakater.com/reload":"roboxfrontend","secret.reloader.stakater.com/reload":"web-config"},"labels":{"app":"roboxfrontend","environment":"qa"},"name":"robox-frontend-deploy","namespace":"axlr-system-qa"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"roboxfrontend"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"app":"roboxfrontend","environment":"qa"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r1"]}]},"weight":50},{"preference":{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r3"]}]},"weight":50},{"preference":{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r4"]}]},"weight":50}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"topology.kubernetes.io/zone","operator":"In","values":["r1","r3","r4"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["roboxfrontend"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"automountServiceAccountToken":false,"containers":[{"envFrom":[{"configMapRef":{"name":"roboxfrontend"}}],"image":"cms-rpunexus.fnb.co.za/axlr/fnb-robolife-web:life-release-nov-24-1","imagePullPolicy":"Always","name":"roboxfrontend","ports":[{"containerPort":3001}],"resources":{"limits":{"cpu":"400m","memory":"1536Mi"},"requests":{"cpu":"400m","memory":"1536Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"privileged":false,"readOnlyRootFilesystem":false,"runAsGroup":101,"runAsNonRoot":true,"runAsUser":101},"volumeMounts":[{"mountPath":"/web-server/config//local_setting.js","name":"web-config","readOnly":true}]}],"imagePullSecrets":[{"name":"harborcreds"}],"securityContext":{"fsGroup":101,"runAsGroup":101,"runAsUser":101},"topologySpreadConstraints":[{"labelSelector":{"matchLabels":{"app":"roboxfrontend"}},"maxSkew":1,"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"},{"labelSelector":{"matchLabels":{"app":"roboxfrontend"}},"maxSkew":1,"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}],"volumes":[{"name":"web-config","secret":{"secretName":"web-config"}}]}}}}
    secret.reloader.stakater.com/reload: web-config
  creationTimestamp: '2024-03-22T09:19:15Z'
  generation: 57
  labels:
    app: roboxfrontend
    environment: qa
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:template:
            f:spec:
              f:containers:
                k:{"name":"roboxfrontend"}:
                  f:env:
                    .: {}
                    k:{"name":"STAKATER_WEB_CONFIG_SECRET"}:
                      .: {}
                      f:name: {}
                      f:value: {}
      manager: Reloader
      operation: Update
      time: '2024-08-28T10:21:27Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:configmap.reloader.stakater.com/reload: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
            f:secret.reloader.stakater.com/reload: {}
          f:labels:
            .: {}
            f:app: {}
            f:environment: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:environment: {}
            f:spec:
              f:affinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
                f:podAntiAffinity:
                  .: {}
                  f:preferredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"roboxfrontend"}:
                  .: {}
                  f:envFrom: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":3001,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:privileged: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsGroup: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/web-server/config//local_setting.js"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:imagePullSecrets:
                .: {}
                k:{"name":"harborcreds"}: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:fsGroup: {}
                f:runAsGroup: {}
                f:runAsUser: {}
              f:terminationGracePeriodSeconds: {}
              f:topologySpreadConstraints:
                .: {}
                k:{"topologyKey":"kubernetes.io/hostname","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
                k:{"topologyKey":"topology.kubernetes.io/zone","whenUnsatisfiable":"ScheduleAnyway"}:
                  .: {}
                  f:labelSelector: {}
                  f:maxSkew: {}
                  f:topologyKey: {}
                  f:whenUnsatisfiable: {}
              f:volumes:
                .: {}
                k:{"name":"web-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: OpenAPI-Generator
      operation: Update
      time: '2024-10-22T08:24:24Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:field.cattle.io/publicEndpoints: {}
      manager: agent
      operation: Update
      time: '2024-11-15T20:54:54Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2024-11-15T20:58:28Z'
  name: robox-frontend-deploy
  namespace: axlr-system-qa
  resourceVersion: '561760680'
  uid: 3fcda206-e26f-4584-8e67-ed08ef77316f
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: roboxfrontend
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: roboxfrontend
        environment: qa
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r1
              weight: 50
            - preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r3
              weight: 50
            - preference:
                matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r4
              weight: 50
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: topology.kubernetes.io/zone
                    operator: In
                    values:
                      - r1
                      - r3
                      - r4
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - roboxfrontend
                topologyKey: kubernetes.io/hostname
              weight: 100
      automountServiceAccountToken: false
      containers:
        - env:
            - name: STAKATER_WEB_CONFIG_SECRET
              value: 40ec5343f6a7cf7097959bb501723c220afb65d2
          envFrom:
            - configMapRef:
                name: roboxfrontend
          image: cms-rpunexus.fnb.co.za/axlr/fnb-robolife-web:life-release-nov-24-1
          imagePullPolicy: Always
          name: roboxfrontend
          ports:
            - containerPort: 3001
              protocol: TCP
          resources:
            limits:
              cpu: 400m
              memory: 1536Mi
            requests:
              cpu: 400m
              memory: 1536Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 101
            runAsNonRoot: true
            runAsUser: 101
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /web-server/config//local_setting.js
              name: web-config
              readOnly: true
      dnsPolicy: ClusterFirst
      imagePullSecrets:
        - name: harborcreds
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 101
        runAsGroup: 101
        runAsUser: 101
      terminationGracePeriodSeconds: 30
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app: roboxfrontend
          maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
        - labelSelector:
            matchLabels:
              app: roboxfrontend
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - name: web-config
          secret:
            defaultMode: 420
            secretName: web-config
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2024-06-26T14:45:20Z'
      lastUpdateTime: '2024-10-22T08:24:27Z'
      message: >-
        ReplicaSet "robox-frontend-deploy-7b6dcb665" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2024-11-15T20:58:28Z'
      lastUpdateTime: '2024-11-15T20:58:28Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
  observedGeneration: 57
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
